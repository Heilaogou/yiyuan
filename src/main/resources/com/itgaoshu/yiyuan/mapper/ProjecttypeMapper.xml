<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itgaoshu.yiyuan.mapper.ProjecttypeMapper" >
  <select id="findAllProjecttype" resultType="projecttype">
    select *from projecttype
    <where>
      <if test="projectName!=null and projectName!=''">
        projectName like concat('%',concat(#{projectName},'%'))
      </if>
    </where> order by projectId desc
  </select>
  <insert id="addProjecttype" parameterType="projecttype">
        insert into projecttype(projectName)values(#{projectName})
    </insert>
  <delete id="deleteProjecttype" parameterType="Integer">
        delete from projecttype where projectId=#{projectId}
    </delete>
  <select id="countp" resultType="int">
        select count(*) from projecttype where projectName=#{projectName}
    </select>
  <select id="findAllMoneytype" resultType="Moneytype">
    select *from Moneytype
    <where>
      <if test="moneytype!=null and moneytype!=''">
        moneytype like concat('%',concat(#{moneytype},'%'))
      </if>
    </where> order by moneyId desc
  </select>
  <insert id="addMoneytype" parameterType="Moneytype">
        insert into Moneytype(moneytype,percent)values(#{moneytype},#{percent})
    </insert>
  <update id="editMoneytype" parameterType="Moneytype">
        update Moneytype set percent=#{percent} where moneyId=#{moneyId}
    </update>
  <delete id="deleteMoneytype" parameterType="Integer">
        delete from Moneytype where moneyId=#{moneyId}
    </delete>
  <select id="countm" resultType="int">
        select  count(*) from Moneytype where moneytype=#{moneytype}
    </select>
  <select id="findAllOutpatienttype" resultType="Outpatienttype">
    SELECT o.ostate, o.outpatientId,p.projectName pprojectName,o.projectName projectName,p.projectId projectId,u.unitName,u.unitId unitId ,o.price from outpatienttype o,unit u, projecttype p where o.unit=u.unitId and p.projectId=o.bigprojectId

    <if test="projectName!=null and projectName!=''">
      and  o.projectName like concat('%',concat(#{projectName},'%'))
    </if> order by o.outpatientId desc
  </select>
  <insert id="addOutpatienttype" parameterType="Outpatienttype">
       insert into Outpatienttype(projectName, unit, bigprojectId, price,ostate) values (#{projectName}, #{unit}, #{bigprojectId}, #{price},#{ostate})
   </insert>
  <update id="editOutpatienttype" parameterType="Outpatienttype">
        update Outpatienttype set price=#{price},unit=#{unit},bigprojectId=#{bigprojectId},ostate=#{ostate} where outpatientId=#{outpatientId}
    </update>
  <delete id="deleteOutpatienttype" parameterType="Integer">
        delete from Outpatienttype where outpatientId=#{outpatientId}
    </delete>
  <select id="counto" resultType="int">
        select  count(*) from Outpatienttype where projectName=#{projectName}
    </select>
  <select id="findAllInoutpatienttype" resultType="Inoutpatienttype">
    SELECT i.inoutpatientId,p.projectName pprojectName,i.projectName projectName,p.projectId projectId,u.unitName,u.unitId unitId ,i.price from inoutpatienttype i,unit u, projecttype p where i.unit=u.unitId and p.projectId=i.bigprojectId
    <if test="projectName!=null and projectName!=''">
      and  i.projectName like concat('%',concat(#{projectName},'%'))
    </if> order by i.inoutpatientId desc
  </select>
  <insert id="addInoutpatienttype" parameterType="Inoutpatienttype">
        insert into Inoutpatienttype(projectName,price,unit,bigprojectId)values(#{projectName},#{price},#{unit},#{bigprojectId})
    </insert>
  <update id="editInoutpatienttype" parameterType="Inoutpatienttype">
        update Inoutpatienttype set price=#{price},unit=#{unit},bigprojectId=#{bigprojectId} where inoutpatientId=#{inoutpatientId}
    </update>
  <delete id="deleteInoutpatienttype" parameterType="Integer">
        delete from Inoutpatienttype where inoutpatientId=#{inoutpatientId}
    </delete>
  <select id="counti" resultType="int">
        select  count(*) from Inoutpatienttype where projectName=#{projectName}
    </select>
  <select id="findAllBed" resultType="Bed">
    select*from bed b,departments d where b.departmentId=d.departmentId
    <if test="bedname!=null and bedname!=''">
      and bedname like concat('%',concat(#{bedname},'%'))
    </if> order by b.bedId desc
  </select>
  <insert id="addBed" parameterType="Bed">
        insert into Bed(bedname,price,state,departmentId)values(#{bedname},#{price},0,#{departmentId})
    </insert>
  <update id="editBed" parameterType="Bed">
        update Bed set price=#{price},departmentId=#{departmentId} where bedId=#{bedId}
    </update>
  <delete id="deleteBed" parameterType="Integer">
        delete from Bed where bedId=#{bedId}
    </delete>
  <select id="countb" resultType="int">
        select  count(*) from Bed where bedname=#{bedname}
    </select>
  <select id="checkCount" resultType="int">
        select count(*) from bed b,register r where r.bednum=b.bedid and b.bedid=#{bedid}
    </select>
  <!--<resultMap id="BaseResultMap" type="com.itgaoshu.yiyuan.bean.Projecttype" >
    <id column="projectId" property="projectid" jdbcType="INTEGER" />
    <result column="projectName" property="projectname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    projectId, projectName
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itgaoshu.yiyuan.bean.ProjecttypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from projecttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from projecttype
    where projectId = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from projecttype
    where projectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itgaoshu.yiyuan.bean.ProjecttypeExample" >
    delete from projecttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    insert into projecttype (projectId, projectName)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    insert into projecttype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectid != null" >
        projectId,
      </if>
      <if test="projectname != null" >
        projectName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectid != null" >
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null" >
        #{projectname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itgaoshu.yiyuan.bean.ProjecttypeExample" resultType="java.lang.Integer" >
    select count(*) from projecttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update projecttype
    <set >
      <if test="record.projectid != null" >
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null" >
        projectName = #{record.projectname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update projecttype
    set projectId = #{record.projectid,jdbcType=INTEGER},
      projectName = #{record.projectname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    update projecttype
    <set >
      <if test="projectname != null" >
        projectName = #{projectname,jdbcType=VARCHAR},
      </if>
    </set>
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    update projecttype
    set projectName = #{projectname,jdbcType=VARCHAR}
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>-->
</mapper>