<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itgaoshu.yiyuan.mapper.ProjecttypeMapper" >
  <select id="findAllProjecttype" resultType="projecttype">
    select *from projecttype
    <where>
      <if test="projectname!=null and projectname!=''">
        projectname like concat('%',concat(#{projectname},'%'))
      </if>
    </where> order by projectid desc
  </select>
  <insert id="addProjecttype" parameterType="projecttype">
        insert into projecttype(projectname)values(#{projectname})
    </insert>
  <delete id="deleteProjecttype" parameterType="Integer">
        delete from projecttype where projectid=#{projectid}
    </delete>
  <select id="countp" resultType="int">
        select count(*) from projecttype where projectname=#{projectname}
    </select>
  <select id="findAllMoneytype" resultType="Moneytype">
    select * from Moneytype
    <where>
      <if test="moneytype!=null and moneytype!=''">
        moneytype like concat('%',concat(#{moneytype},'%'))
      </if>
    </where> order by moneyid desc
  </select>
  <insert id="addMoneytype" parameterType="Moneytype">
        insert into Moneytype(moneytype,percent)values(#{moneytype},#{percent})
    </insert>
  <update id="editMoneytype" parameterType="Moneytype">
        update Moneytype set Moneytype=#{moneytype},percent=#{percent} where moneyid=#{moneyid}
    </update>
  <delete id="deleteMoneytype" parameterType="Integer">
        delete from Moneytype where moneyid=#{moneyid}
    </delete>
  <select id="countm" resultType="int">
        select  count(*) from Moneytype where moneytype=#{moneytype}
    </select>
  <select id="findAllOutpatienttype" resultType="Outpatienttype">
    SELECT o.ostate, o.outpatientid,p.projectname pprojectname,o.projectname projectname,p.projectid projectid,u.unitName,u.unitId unitId ,o.price from outpatienttype o,unit u, projecttype p where o.unit=u.unitId and p.projectid=o.bigprojectid

    <if test="projectname!=null and projectname!=''">
      and  o.projectname like concat('%',concat(#{projectname},'%'))
    </if> order by o.outpatientid desc
  </select>
  <insert id="addOutpatienttype" parameterType="Outpatienttype">
       insert into Outpatienttype(projectname, unit, bigprojectid, price,ostate) values (#{projectname}, #{unit}, #{bigprojectid}, #{price},#{ostate})
   </insert>
  <update id="editOutpatienttype" parameterType="Outpatienttype">
        update Outpatienttype set price=#{price},unit=#{unit},bigprojectid=#{bigprojectid},ostate=#{ostate} where outpatientid=#{outpatientid}
    </update>
  <delete id="deleteOutpatienttype" parameterType="Integer">
        delete from Outpatienttype where outpatientid=#{outpatientid}
    </delete>
  <select id="counto" resultType="int">
        select  count(*) from Outpatienttype where projectname=#{projectname}
    </select>
  <select id="findAllProjecttype1" resultType="Projecttype">
        select * from Projecttype
  </select>
  <select id="findAllUnit" resultType="Unit">
        select * from Unit
  </select>
  <select id="findAllInoutpatienttype" resultType="Inoutpatienttype">
    SELECT i.inoutpatientid,p.projectname pprojectname,i.projectname projectname,p.projectid projectid,u.unitName,u.unitId unitId ,i.price from inoutpatienttype i,unit u, projecttype p where i.unit=u.unitId and p.projectid=i.bigprojectid
    <if test="projectname!=null and projectname!=''">
      and  i.projectname like concat('%',concat(#{projectname},'%'))
    </if> order by i.inoutpatientid desc
  </select>
  <insert id="addInoutpatienttype" parameterType="Inoutpatienttype">
        insert into Inoutpatienttype(projectname,price,unit,bigprojectid)values(#{projectname},#{price},#{unit},#{bigprojectid})
    </insert>
  <update id="editInoutpatienttype" parameterType="Inoutpatienttype">
        update Inoutpatienttype set price=#{price},unit=#{unit},bigprojectid=#{bigprojectid} where inoutpatientid=#{inoutpatientid}
    </update>
  <delete id="deleteInoutpatienttype" parameterType="Integer">
        delete from Inoutpatienttype where inoutpatientid=#{inoutpatientid}
    </delete>
  <select id="counti" resultType="int">
        select  count(*) from Inoutpatienttype where projectname=#{projectname}
    </select>
  <select id="findAllProjecttype2" resultType="Projecttype">
        select * from Projecttype
  </select>
  <select id="findAllUnit1" resultType="Unit">
        select * from Unit
  </select>
  <select id="findAllBed" resultType="Bed">
    select*from bed b,departments d where b.departmentid=d.departmentid
    <if test="bedname!=null and bedname!=''">
      and bedname like concat('%',concat(#{bedname},'%'))
    </if> order by b.bedid desc
  </select>
  <insert id="addBed" parameterType="Bed">
        insert into Bed(bedname,price,state,departmentid)values(#{bedname},#{price},0,#{departmentid})
    </insert>
  <update id="editBed" parameterType="Bed">
       UPDATE Bed SET bedname=#{bedname},Price=#{price},departmentid=#{departmentid} where bedid=8
    </update>
  <delete id="deleteBed" parameterType="Integer">
        delete from Bed where bedid=#{bedid}
    </delete>
  <select id="countb" resultType="int">
        select  count(*) from Bed where bedname=#{bedname}
    </select>
  <select id="checkCount" resultType="int">
        select count(*) from bed b,register r where r.bednum=b.bedid and b.bedid=#{bedid}
    </select>
  <select id="departmentList" resultType="Departments">
        select * from Departments
  </select>
  <!--<resultMap id="BaseResultMap" type="com.itgaoshu.yiyuan.bean.Projecttype" >
    <id column="projectid" property="projectid" jdbcType="INTEGER" />
    <result column="projectname" property="projectname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    projectid, projectname
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itgaoshu.yiyuan.bean.ProjecttypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from projecttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from projecttype
    where projectid = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from projecttype
    where projectid = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itgaoshu.yiyuan.bean.ProjecttypeExample" >
    delete from projecttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    insert into projecttype (projectid, projectname)
    values (#{projectid,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    insert into projecttype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectid != null" >
        projectid,
      </if>
      <if test="projectname != null" >
        projectname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectid != null" >
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="projectname != null" >
        #{projectname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itgaoshu.yiyuan.bean.ProjecttypeExample" resultType="java.lang.Integer" >
    select count(*) from projecttype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update projecttype
    <set >
      <if test="record.projectid != null" >
        projectid = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.projectname != null" >
        projectname = #{record.projectname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update projecttype
    set projectid = #{record.projectid,jdbcType=INTEGER},
      projectname = #{record.projectname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    update projecttype
    <set >
      <if test="projectname != null" >
        projectname = #{projectname,jdbcType=VARCHAR},
      </if>
    </set>
    where projectid = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itgaoshu.yiyuan.bean.Projecttype" >
    update projecttype
    set projectname = #{projectname,jdbcType=VARCHAR}
    where projectid = #{projectid,jdbcType=INTEGER}
  </update>-->
</mapper>